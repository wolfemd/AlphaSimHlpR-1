% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/usefulnessSim.R
\name{runBreedingSchemeCycOutputs}
\alias{runBreedingSchemeCycOutputs}
\title{runBreedingSchemeCycOutputs function}
\usage{
runBreedingSchemeCycOutputs(
  replication = NULL,
  nCycles = 2,
  initializeFunc,
  productPipeline,
  populationImprovement,
  bsp
)
}
\arguments{
\item{replication}{Integer replication of running the breeding scheme}

\item{nCycles}{Integer number of cycles to run the breeding scheme}

\item{initializeFunc}{Function to initialize the breeding program.}

\item{productPipeline}{Function to advance the product pipeline by one generation}

\item{populationImprovement}{Function to improve the breeding population and select parents to initiate the next cycle of the breeding scheme}

\item{bsp}{A list of breeding scheme parameters. It contains pipeline parameters: nParents, nCrosses, nProgeny, checks, nStages, errVars, nReps, nEntries, nChks, stageNames, and nCyclesToKeepRecords. It contains population parameters: nFounders, nChr, segSites, nQTL, genVar, meanDD, varDD, nSNP}
}
\value{
A \code{records} object containing the phenotypic records retained of the breeding scheme
}
\description{
function to run a two-part strategy breeding scheme. See Gaynor et al. 2017 for the general idea.
Adds _per cycle_ output container to records object. Currently that is used to collect the marker effects/varcomps/GEBV and UC selection criterion computed each cycle in the "popImrpovUC" function.
}
\details{
A wrapper to initiate the breeding program then iterate cycles of product pipeline and population improvement
}
\examples{
bsp <- specifyPipeline()
bsp <- specifyPopulation(bsp)
records <- runBreedingScheme(replication=NULL, nCycles=5, initializeFunc=initFuncSimp, productPipeline=prodPipeSimp, populationImprovement=popImprov1, bsp)
}
